name: template_workspace

environment:
  sdk: ^3.7.0

workspace:
  - apps/app
  - packages/cores/dependency_override
  - packages/cores/designsystem
  - packages/cores/domain
  - packages/infrastructure/firebase
  - packages/infrastructure/mock
  - packages/infrastructure/shared_preferences

dev_dependencies:
  custom_lint: any
  flutter_lints:
  grinder: ^0.9.5
  melos: ^7.0.0-dev.7
  nilts: any
  path: ^1.9.0
  pedantic_mono: any
  yaml: ^3.1.2
  yaml_edit: ^2.2.1

melos: 
  sdkPath: .fvm/flutter_sdk

  command:
    bootstrap:
      environment:
        sdk: ^3.7.0
        flutter: ^3.29.0
      dependencies:
        collection: any
        flutter_hooks: any
        freezed_annotation: any
        go_router: any
        hooks_riverpod: ^2.6.1
        intl: any
        json_annotation: any
        logger: any
        riverpod: ^2.6.1
        riverpod_annotation: ^2.6.1
        slang: ^4.1.0
        slang_flutter: ^4.1.0
      dev_dependencies:
        alchemist: ^0.10.0
        build_runner: ^2.4.14
        custom_lint: ^0.7.0
        flutter_gen_runner: any
        freezed: any
        json_serializable: any
        nilts: any
        pedantic_mono: any
        riverpod_generator: ^2.6.1
        riverpod_lint: ^2.6.1
        slang_build_runner: ^4.1.0
        test: any
      # hooks:
      #   post: grind generate-package-labels && grind generate-package-labeler
    clean:
      hooks:
        post: melos exec --flutter --concurrency=3 -- "flutter clean"
          melos exec --flutter --file-exists="ios/Podfile.lock" -- "cd ios && rm Podfile.lock"
          melos exec --flutter --file-exists="macos/Podfile.lock" -- "cd macos && rm Podfile.lock"

  scripts:
    build_app: melos run build_app_android && melos run build_app_ios
    build_app_dev: melos run build_app_android_dev && melos run build_app_ios_dev

    build_app_ios: melos exec --scope="flutter_app" -- fvm flutter build ipa --export-options-plist=ExportOptions.plist --dart-define-from-file=flavor/prod.json
    build_app_ios_dev: melos exec --scope="flutter_app" -- fvm flutter build ipa --export-options-plist=ExportOptions.plist --dart-define-from-file=flavor/dev.json
    build_app_android: melos exec --scope="flutter_app" -- fvm flutter build appbundle --dart-define-from-file=flavor/prod.json
    build_app_android_dev: melos exec --scope="flutter_app" -- fvm flutter build appbundle --dart-define-from-file=flavor/dev.json

    report_test:
      exec: flutter test --no-pub --machine > test_report.log
      packageFilters:
        flutter: true
        dependsOn: test

    # ローカルでフォーマットとdart fix --applyを実行する
    format_and_fix:
      exec: bash "$MELOS_ROOT_PATH/scripts/format.sh"

    report_custom_lint:ci:
      exec: bash "$MELOS_ROOT_PATH/scripts/report-custom-lint-ci.sh"
      packageFilters:
        dependsOn: custom_lint

    regenerate_code: melos run regenerate_by_using_build_runner && melos run regenerate_by_using_gen_slang

    regenerate_by_using_build_runner:
      run: dart run build_runner build -d
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: build_runner

    regenerate_by_using_gen_slang:
      run: dart run slang
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: slang

    watch_build_runner:
      run: dart run build_runner watch -d
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: build_runner

    test_golden:
      run: flutter test --tags=golden
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: alchemist

    test_update_golden:
      run: flutter test --update-goldens
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: alchemist

  ide:
    intellij:
      # Disabling IntelliJ's automatic configuration.
      # This is to support different build configurations for environments.
      enabled: false
